{
	"info": {
		"_postman_id": "d9449328-4476-4162-98fe-2eaaac142f6d",
		"name": "Byte2Bite - Fixed Collection",
		"description": "Food Waste Management Platform API Collection - Fixed and Optimized",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28551029"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "User authentication endpoints",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.accessToken) {",
									"        pm.environment.set('access_token', response.data.accessToken);",
									"        pm.environment.set('refresh_token', response.data.refreshToken);",
									"        pm.environment.set('user_id', response.data.user._id);",
									"        pm.environment.set('user_email', response.data.user.email);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"securePassword123\",\n    \"role\": \"donor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user (donor or NGO)"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.accessToken) {",
									"        pm.environment.set('access_token', response.data.accessToken);",
									"        pm.environment.set('refresh_token', response.data.refreshToken);",
									"        pm.environment.set('user_id', response.data.user._id);",
									"        pm.environment.set('user_email', response.data.user.email);",
									"        pm.environment.set('user_role', response.data.user.role);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"securePassword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Refresh Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.accessToken) {",
									"        pm.environment.set('access_token', response.data.accessToken);",
									"        if (response.data.refreshToken) {",
									"            pm.environment.set('refresh_token', response.data.refreshToken);",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh-tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh-tokens"
							]
						},
						"description": "Refresh access token using refresh token"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.unset('access_token');",
									"    pm.environment.unset('refresh_token');",
									"    pm.environment.unset('user_id');",
									"    pm.environment.unset('user_email');",
									"    pm.environment.unset('user_role');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout user and invalidate tokens"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user details"
					},
					"response": []
				}
			]
		},
		{
			"name": "OTP Management",
			"description": "OTP generation and verification endpoints",
			"item": [
				{
					"name": "Send OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"method\": \"email\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/otp/getOTP",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"otp",
								"getOTP"
							]
						},
						"description": "Send OTP via email or SMS"
					},
					"response": []
				},
				{
					"name": "Verify OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.accessToken) {",
									"        pm.environment.set('access_token', response.data.accessToken);",
									"        pm.environment.set('refresh_token', response.data.refreshToken);",
									"        pm.environment.set('user_id', response.data.user._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"otp\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/otp/verifyOTP",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"otp",
								"verifyOTP"
							]
						},
						"description": "Verify OTP code"
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"description": "User profile and management endpoints",
			"item": [
				{
					"name": "Complete Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"donor\",\n    \"basicInfo\": {\n        \"name\": \"John Doe Restaurant\",\n        \"profilePicture\": \"https://example.com/profile.jpg\",\n        \"contact\": \"+1234567890\",\n        \"alternateContact\": \"+0987654321\"\n    },\n    \"address\": {\n        \"country\": \"USA\",\n        \"state\": \"California\",\n        \"city\": \"Los Angeles\",\n        \"zipCode\": \"90001\",\n        \"fullAddress\": \"123 Main St, Los Angeles, CA 90001\",\n        \"coordinates\": {\n            \"latitude\": 34.0522,\n            \"longitude\": -118.2437\n        }\n    },\n    \"additionalDetails\": {\n        \"description\": \"A restaurant committed to reducing food waste and helping the community.\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/complete-profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"complete-profile"
							]
						},
						"description": "Complete user profile with additional details"
					},
					"response": []
				},
				{
					"name": "Upload Profile Picture",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "profilePicture",
									"type": "file",
									"src": [],
									"description": "Profile picture file (JPG, PNG, etc.)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/user/upload/profilePicture",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"upload",
								"profilePicture"
							]
						},
						"description": "Upload user profile picture"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"profile"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"John Doe Updated\",\n    \"phone\": \"+1234567890\",\n    \"address\": {\n        \"street\": \"456 Updated St\",\n        \"city\": \"Los Angeles\",\n        \"state\": \"California\",\n        \"zipCode\": \"90002\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"profile"
							]
						},
						"description": "Update user profile information"
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard",
			"description": "Dashboard and analytics endpoints",
			"item": [
				{
					"name": "Get Dashboard Overview",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dashboard/overview",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dashboard",
								"overview"
							]
						},
						"description": "Get dashboard overview with statistics"
					},
					"response": []
				},
				{
					"name": "Get User Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dashboard/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dashboard",
								"stats"
							]
						},
						"description": "Get detailed user statistics"
					},
					"response": []
				}
			]
		},
		{
			"name": "Food Contributions",
			"description": "Food donation and contribution endpoints",
			"item": [
				{
					"name": "Create Food Contribution",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodItems\": [\n        {\n            \"name\": \"Fresh Sandwiches\",\n            \"category\": \"Prepared Food\",\n            \"quantity\": 50,\n            \"unit\": \"pieces\",\n            \"expiryDate\": \"2024-12-31T18:00:00.000Z\",\n            \"description\": \"Fresh sandwiches prepared today\",\n            \"isVegetarian\": true,\n            \"isVegan\": false\n        }\n    ],\n    \"pickupLocation\": {\n        \"address\": \"123 Restaurant St\",\n        \"city\": \"Los Angeles\",\n        \"state\": \"California\",\n        \"zipCode\": \"90001\"\n    },\n    \"availableFrom\": \"2024-12-30T10:00:00.000Z\",\n    \"availableUntil\": \"2024-12-30T18:00:00.000Z\",\n    \"specialInstructions\": \"Please bring insulated bags\",\n    \"isUrgent\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/contributions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"contributions"
							]
						},
						"description": "Create a new food contribution"
					},
					"response": []
				},
				{
					"name": "Get Available Contributions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/contributions?status=available&page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"contributions"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get list of available food contributions"
					},
					"response": []
				},
				{
					"name": "Accept Contribution",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/contributions/{{contribution_id}}/accept",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"contributions",
								"{{contribution_id}}",
								"accept"
							]
						},
						"description": "Accept a food contribution (NGO only)"
					},
					"response": []
				},
				{
					"name": "Get My Contributions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/contributions/my-contributions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"contributions",
								"my-contributions"
							]
						},
						"description": "Get current user's contributions"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-refresh token if expired",
					"const accessToken = pm.environment.get('access_token');",
					"const refreshToken = pm.environment.get('refresh_token');",
					"",
					"if (accessToken && refreshToken) {",
					"    try {",
					"        const payload = JSON.parse(atob(accessToken.split('.')[1]));",
					"        const currentTime = Math.floor(Date.now() / 1000);",
					"        ",
					"        // If token expires in less than 5 minutes, refresh it",
					"        if (payload.exp - currentTime < 300) {",
					"            pm.sendRequest({",
					"                url: pm.environment.get('base_url') + '/auth/refresh-tokens',",
					"                method: 'POST',",
					"                header: {",
					"                    'Content-Type': 'application/json'",
					"                },",
					"                body: {",
					"                    mode: 'raw',",
					"                    raw: JSON.stringify({",
					"                        refreshToken: refreshToken",
					"                    })",
					"                }",
					"            }, function (err, response) {",
					"                if (!err && response.code === 200) {",
					"                    const data = response.json();",
					"                    if (data.data && data.data.accessToken) {",
					"                        pm.environment.set('access_token', data.data.accessToken);",
					"                        if (data.data.refreshToken) {",
					"                            pm.environment.set('refresh_token', data.data.refreshToken);",
					"                        }",
					"                    }",
					"                }",
					"            });",
					"        }",
					"    } catch (e) {",
					"        console.log('Token parsing error:', e);",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for error handling",
					"if (pm.response.code >= 400) {",
					"    console.log('Error Response:', pm.response.text());",
					"    ",
					"    // If unauthorized and we have a refresh token, try to refresh",
					"    if (pm.response.code === 401) {",
					"        const refreshToken = pm.environment.get('refresh_token');",
					"        if (refreshToken) {",
					"            console.log('Attempting token refresh...');",
					"        } else {",
					"            console.log('No refresh token available. Please login again.');",
					"        }",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://byte2bite-backend.onrender.com/api/v1",
			"type": "string"
		},
		{
			"key": "contribution_id",
			"value": "",
			"type": "string"
		}
	]
}